/********************************
    class Node
    {
    public:
        int data;
        Node *next;
        Node(int data)
        {
            this->data = data;
            this->next = NULL;
        }
    };

********************************/
void insertAtTail(Node* &tail,Node* curr){
    tail->next = curr;
    tail = curr;
}
Node* sortList(Node *head)
{
    Node* zerohead = new Node(-1);
    Node* zerotail = zerohead;
    Node* onehead = new Node(-1);
    Node* onetail = onehead;
    Node* twohead = new Node(-1);
    Node* twotail = twohead;
    
    Node*curr = head;
//     create seprate list 0s ,1s 2s
    while(curr != NULL){
        int value = curr -> data;
        if(value == 0 ){
            insertAtTail(zerotail,curr);
        }
        else if(value == 1){
            insertAtTail(onetail,curr);
        }
        else if(value == 2){
            insertAtTail(twotail,curr);
        }
        curr = curr->next;
    }
//  merge 3 LL
    if(onehead ->next != NULL) {
        // is list is not empty
        zerotail ->next = onehead->next;
    }
    else{
//           1s list is empty
        zerotail ->next = twohead->next;
    }
        onetail->next = twohead->next;
    twotail->next = NULL;
//     keeping head at proper position 
    head = zerohead ->next;
//     delete dummy nodes
    delete zerohead;
    delete onehead;
    delete twohead;
    
    return head;
}
